/* static/styles.css */

body {
    font-family: Arial, sans-serif;
    font-size: 60px;
    color: white; /*Font Color*/
    background-color: black;
    height: 100vh; 
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: auto 1fr auto;   /* header | main | footer  */
    grid-template-areas:
        "hdr"
        "main"
        "ftr";margin: 0;
    padding: 0;
}

header, footer {
    color: white;
    text-align: center;
    padding: 10px;
    display: flex;
    justify-content: space-between;
    font-size: 60px;
    border: 1px solid white; /* Add white border */
}
header {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr auto;
    grid-area: hdr;
    background-color: rgb(11, 69, 11);
}
/* .center-header {
    justify-content: center;
} */

footer {
    display: grid;
    grid-template-columns: auto 1fr auto;
    grid-area: ftr;
    background-color: blue;
}
/* .left-footer {
    justify-content: flex-start;
}
.center-footer {
    justify-content: center;
}
.right-footer {
    justify-content: flex-end;
} */

.nested-j1939-grid{
    flex: 1;
    display: grid;
    grid-template-columns: repeat(3, 1fr) ;
    grid-auto-rows: 1fr;
}
.nested-ballast-grid{
    flex: 1;
    display: grid;
    grid-template-columns: repeat(3, 1fr) ;
    grid-auto-rows: auto minmax(200px, 1fr) auto auto auto;
}
.grid-cell {
    border: 1px solid white; /* Add white grid lines */
    padding: 0px; /* Add padding for better spacing */
    height: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}
.control-button {
    border-radius: 30px ;
    padding: 20px;
    display: flex;
    align-items: center; /* Vertically center */
    justify-content: center; /* Horizontally center */
    color: black;
    border: none;
    font-size: 72px;
    cursor: pointer;
    margin: 0;
    width: 100%;
}
select {
    font-size: 60pt;
    text-align: center;
    width: 100%
}

/* button {
    margin: 5px;
    padding: 10px 20px;
    font-size: 48pt;
    cursor: pointer;
    display: flex;
} */

.tank-container {
    width: 100%;
    height: 100%; 
    display: flex;
    flex-grow: 1;
    position: relative;
    background-color: black;
    border: none;
    margin: 0pt;
    padding: 0pt;
}
.tank-graphic {
    width: 50%;
    height: 100%;
    border: 0px solid white;
    border-radius: 30px; 
    position: absolute;
    bottom: 0%;
    background-color: transparent;
    align-items: stretch;
    transform: translateX(-80px);
}
.tank-level {
    width: 100%;
    background-color: blue;
    position: absolute;
    bottom: 0%;
    border-radius: 30px 30px 0 0;
    text-align: center;
    color: white;
    font-weight: bold;
    font-size: 72pt;
    display: flex;
    align-items: center;
    justify-content: center;
}
.tank-label {
    position: absolute;
    width: 100%;
    text-align: center;
    top: 10px;
    font-size: 90pt;
    color: whitesmoke
}
.tank-percentage {
    position: absolute;
    width: 100%;
    text-align: center;
    bottom: 10pt;
    /* transform: translateY(50%); */
    font-size: 90pt;
    color: white;
    font-weight: bold;
}
.tank-message {
    position: absolute;
    width: 100%;
    text-align: center;
    bottom: 50%;
    transform: translateY(50%);
    font-size: 72pt;
    color: white;
}

.water-sensor-container {
    width: 100%;
    color: black;
}
.water-sensor-container span {
    font-weight: bold;
    font-family: Tahoma, sans-serif;

}

/* #heading-control {
  position: absolute;
  top: 50%; left: 50%;
  width: 0; height: 100%;            /* anchor */
 */

/* 1. The flex box that holds the compass gets proper centring */
.content {
    text-align: center;
    display: flex;
    /*align-items: center;      /* vertical centre */
    /*justify-content: center;  /* horizontal centre */
    justify-content: stretch; /*   stretch to fill the viewport */
    height: 100%;             /* already set */
    /* width:100%; */
    /*position: relative;       /* lets goal-buttons absoluteposition */
}

/* 2. Let the canvas always be a perfect circle that fills the
      *smaller* viewport dimension (minus header+footer).          */
canvas#compass{
    /* occupy the smaller side of the free viewport */
    width:75vmin;          /* vmin = min(vw, vh)  */
    max-height:100%;        /* donâ€™t stick out of .content */
    aspect-ratio:1/1;       /* keeps perfect circle         */
    border-radius:50%;      /* circle clipping (optional)   */
    display:block;          /* kill inline gap              */
    background:#fafafa;     /* or transparent */
    transform:translate(100%, 0%);
}

#goal-buttons{
    position:absolute;
    left:50%; top:50%;
    transform:translate(-50%, -50%);     /* centre of canvas */
    pointer-events:none;                 /* let canvas get drags */
}

#goal-buttons img{
    width:180px;                         /* size to taste      */
    pointer-events:auto;                 /* but buttons clickable */
}

/* offset each button around the circle rim */
#btnPort  { transform:translate(-420px, -90px); }   /*  adjust radius+angle */
#btnStar  { transform:translate( 240px, -90px); }